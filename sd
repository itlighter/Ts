local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Remotes = ReplicatedStorage:WaitForChild("Remotes")
local player = Players.LocalPlayer
local PlayerGui = player.PlayerGui
local CenterAlign = PlayerGui.ScreenGui.CenterAlign
local Ranks = require(ReplicatedStorage.Modules.Ranks)
local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()
WindUI:SetTheme("Dark")
local Window = WindUI:CreateWindow({
    Title = "A Cultivation Game Script",
    Icon = "door-open",
    Author = "Pucuk",
    Folder = "PucukHub",
    KeySystem = {
        Note = "Example Key System. With platoboost, etc.",
        URL = "https://pandadevelopment.net/booster/cmf8xg4jv0808whrxwbd6xqfw",
        API = {
            { 
                Type = "pandadevelopment",
                ServiceId = pucukhub,
            },
        },
    },
})
Window:SetToggleKey(Enum.KeyCode.LeftControl)
Window:EditOpenButton({
    Title = "A Cultivation Game",
    Icon = "monitor",
    CornerRadius = UDim.new(0,16),
    StrokeThickness = 2,
    Color = ColorSequence.new( -- gradient
        Color3.fromHex("FF0F7B"), 
        Color3.fromHex("F89B29")
    ),
    OnlyMobile = false,
    Enabled = true,
    Draggable = true,
})
local Tab = Window:Tab({
    Title = "Main",
    Icon = "house",
    Locked = false,
})
local miscTab = Window:Tab({
    Title = "Misc",
    Icon = "circle-ellipsis",
    Locked = false,
})
Window:SelectTab(1) -- Number of Tab
local fighting = false
local currentBattle = nil
local autoBattleEnabled = false
local autoCultivateEnabled = false
local autoBreakthroughEnabled = false
local skillToUse = 3

local CultivateEvent = Remotes.Cultivate
local BreakthroughEvent = Remotes.Breakthrough
local ActivatePill = Remotes.ActivatePill
local AddStat = Remotes.UsePoint
local selectedPill = nil
local selectedStat = nil
local pillAmount = 1
local statAmount = 1
local cooldowns = {}
local selectedNPCs = {}

Remotes.NPCCooldown.OnClientEvent:Connect(function(npc,cd)
    cooldowns[npc] = os.clock() + cd
end)

local function cleanupCooldowns()
    local t = os.clock()
    for npc,expiry in pairs(cooldowns) do
        if t>=expiry then cooldowns[npc]=nil end
    end
end

local function findNextNPC()
    cleanupCooldowns()
    for npc,_ in pairs(selectedNPCs) do
        if not cooldowns[npc] then return npc end
    end
    return nil
end

local function startFight()
    if not autoBattleEnabled or fighting then return end
    local npc = findNextNPC()
    if npc then
        fighting = true
        Remotes.StartBattle:FireServer(npc)
    else
        task.delay(2,startFight)
    end
end

-- Battle initiate
Remotes.InitiateBattle.OnClientEvent:Connect(function(npc,skills,id,stats)
    if selectedNPCs[npc.Name] then
        currentBattle = id
        Remotes.BattleReady:FireServer(id)
    end
end)

Remotes.BattleUpdate.OnClientEvent:Connect(function(state)
    if state.BattleId ~= currentBattle then return end
    local hpEnemy = state.Health2
    local turn = state.TurnOwner

    if hpEnemy <= 0 then
        currentBattle = nil
        task.delay(5, function()
            fighting = false
            if autoBattleEnabled then
                startFight()
            end
        end)
        return
    end

    if turn == 1 then
        task.delay(1, function()
            Remotes.Skill:FireServer(skillToUse)
        end)
    end
end)

local function cultivateLoop()
    while autoCultivateEnabled do
        wait(1)
        if not player:GetAttribute("Cultivating") and not player:GetAttribute("Breakthrough") then
            CultivateEvent:FireServer(true)
        end
    end
end

local function breakthroughLoop()
    while autoBreakthroughEnabled do
        wait(1)
        local currentQi = player:GetAttribute("Qi") or 0
        local playerRank = player:GetAttribute("Rank") or 1
        local playerSubRank = player:GetAttribute("SubRank") or 1
        local rankIndex = Ranks.Index[playerRank] or 1
        local qiRequirement = Ranks.Requirements[rankIndex][playerSubRank] or 0

        if currentQi>=qiRequirement and not player:GetAttribute("Breakthrough") then
            CultivateEvent:FireServer(false)
            BreakthroughEvent:FireServer(true)
        end
    end
end

local scrollingFrame = PlayerGui:WaitForChild("ScreenGui")
    :WaitForChild("CenterAlign")
    :WaitForChild("Inventory")
    :WaitForChild("Frame")
    :WaitForChild("CanvasGroup")
    :WaitForChild("ScrollingFrame")

local function formatPillName(frameName)
    local cleanName = frameName:gsub("^pill", "", 1)
    cleanName = cleanName:gsub("(%u)", " %1")
    cleanName = cleanName:gsub("^%s+", "")
    return cleanName
end

local pillList = {}
for _, child in ipairs(scrollingFrame:GetChildren()) do
    if child.Name:lower():find("pill") then
        table.insert(pillList, formatPillName(child.Name))
    end
end

local autoCultivateToggle = Tab:Toggle({
    Title = "Auto Cultivate",
    Type = "Checkbox",
    Default = false,
    Callback = function(state) 
        autoCultivateEnabled = state
        if autoCultivateEnabled then spawn(cultivateLoop) end
    end
})
local autoBreakthroughToggle = Tab:Toggle({
    Title = "Auto Breakthrough",
    Type = "Checkbox",
    Default = false,
    Callback = function(state) 
        autoBreakthroughEnabled = state
        if autoBreakthroughEnabled then spawn(breakthroughLoop) end
    end
})
local targetDropdown = Tab:Dropdown({
    Title = "Select Target",
    Values = { "Junior", "SeniorDisciple", "HallMaster", "SectElder" },
    Value = {},
    Multi = true,
    AllowNone = true,
    Callback = function(option) 
        local newSelection = {}
        for _, npc in ipairs(option) do
            newSelection[npc] = true
        end
        selectedNPCs = newSelection
    end
})
local autoFightToggle = Tab:Toggle({
    Title = "Auto Fight",
    Desc = "Always use Skill 3 (Qi Blade)",
    Type = "Checkbox",
    Default = false,
    Callback = function(state) 
        autoBattleEnabled = state
        if autoBattleEnabled then spawn(startFight) end
    end
})
local pillDropdown = miscTab:Dropdown({
    Title = "Select Pill",
    Values = pillList,
    Value = "",
    AllowNone = true,
    Callback = function(option) 
        selectedPill = option 
    end
})
local pillInput = miscTab:Input({
    Title = "Amount",
    Desc = "How many pills to use",
    Value = "1",
    Type = "Input",
    Placeholder = "Enter number...",
    Callback = function(input) 
        local num = tonumber(input)
        if num and num > 0 then
            pillAmount = num
        else
            pillAmount = 1
        end
    end
})

local pillButton = miscTab:Button({
    Title = "Use Pill",
    Desc = "Consume selected pill",
    Locked = false,
    Callback = function()
        if not selectedPill then
            return
        end
        for i = 1, pillAmount do
            ActivatePill:FireServer(selectedPill)
            wait(1)
        end
    end
})
local statDropdown = miscTab:Dropdown({
    Title = "Select Stats",
    Values = {"Dexterity", "Strength", "Spirit", "Magic", "Speed"},
    Value = "",
    AllowNone = true,
    Callback = function(option) 
        selectedStat = option 
    end
})
local statInput = miscTab:Input({
    Title = "Amount",
    Desc = "How many points to add",
    Value = "1",
    Type = "Input",
    Placeholder = "Enter number...",
    Callback = function(input) 
        local num = tonumber(input)
        if num and num > 0 then
            statAmount = num
        else
            statAmount = 1
        end
    end
})

local statButton = miscTab:Button({
    Title = "Add Stats",
    Locked = false,
    Callback = function()
        if not selectedStat then
            return
        end
        if statAmount <= player:GetAttribute("Points") then
            for i = 1, statAmount do
                AddStat:FireServer(selectedStat)
                wait(1)
            end
        else
            local pointDialog = Window:Dialog({
                Title = "Points not enough",
                Content = "Your points is not enough",
                Buttons = {
                    {
                        Title = "Close",
                    },
                },
            })
        end
    end
})
